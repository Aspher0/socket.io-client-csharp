name: Release
trigger: none

pool:
  vmImage: ubuntu-latest

parameters:
  - name: SocketIOClient
    displayName: SocketIOClient
    type: boolean
    default: false

jobs:
  - job:
    displayName: Pack and Push
    steps:
      # - task: CmdLine@2
      #   inputs:
      #     script: |
      #       dotnet --list-sdks
      #       dotnet --version
      # - template: templates/net-sdk.yml
      # - task: CmdLine@2
      #   inputs:
      #     script: |
      #       dotnet --list-sdks
      #       dotnet --version
      - ${{ if parameters.SocketIOClient }}:
        ################
        # If your .NET Core or .NET Standard build depends on NuGet packages,
        # make sure to add two copies of this step:
        # one with the restore command and one with the build command.
        # https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/build/dotnet-core-cli?view=azure-devops
        # - task: DotNetCoreCLI@2
        #   displayName: Restore SocketIOClient
        #   inputs:
        #     command: restore
        #     projects: $(Agent.BuildDirectory)/s/src/SocketIOClient/SocketIOClient.csproj
        # - task: DotNetCoreCLI@2
        #   displayName: Build SocketIOClient
        #   inputs:
        #     workingDirectory: $(Agent.BuildDirectory)/s/src/SocketIOClient
        #     command: build
        ################
        - task: DotNetCoreCLI@2
          displayName: Pack SocketIOClient
          inputs:
            command: pack
            projects: $(Agent.BuildDirectory)/s/src/SocketIOClient/SocketIOClient.csproj
            outputDir: $(Build.ArtifactStagingDirectory)
        - task: DotNetCoreCLI@2
          displayName: Push SocketIOClient to nuget.org
          inputs:
            workingDirectory: $(Build.ArtifactStagingDirectory)/s/src/SocketIOClient
            command: push
            nuGetFeedType: external
            externalEndpoint: NuGetApiKey
